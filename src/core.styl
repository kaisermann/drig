$helpersDict = {
	// key: (( alias value ) ( alias value ) ( alias value ))
	justify: ((start flex-start) (center) (end flex-end) (around space-around) (between space-between)),
	align: (start flex-start) (center) (end flex-end),
	content: ((start flex-start) (center) (end flex-end) (around space-around) (between space-between) (stretch)),
	wrap: ((no-wrap nowrap) (with-wrap wrap)),
	growshrink: ((none 0) (single 1) (double 2)),
	order: ((first -1) (last 1)),
	direction: ((row) (row-reverse) (col column) (col-reverse column-reverse))
}

buildRolleiflex()
	$scaleSymbol = unquote(rolleiflex.classScaleDivisor)
	$pref = unquote(rolleiflex.classPrefix)
	$gutter = rUnit(rolleiflex.spaces.gutter / 2)

	rUnit(u)
		if(!u || unit(u) == '%')
			return u

		if(rolleiflex.use.em)
			return unit(u / rolleiflex.baseFontSize, 'em')

		return unit(u, 'px')

	rBreakpointHelpers($scaleName)

		rBuildHelper($aliasPart, $prop, $dict)
			for $c in $helpersDict[$dict]
				.-{$pref}{$aliasPart}{$c[0]}{$scaleSymbol}{$scaleName}
					{$prop}: ($c[1] || $c[1] == 0) ? $c[1] : $c[0]

		// Flex element children alignment
		rBuildHelper('justify-','justify-content', 'justify')
		rBuildHelper('align-','align-items', 'align')
		rBuildHelper('self-','align-self', 'align')
		// Wrapped content alignment
		rBuildHelper('content-','align-content', 'content')
		// Wrapping elements
		rBuildHelper('','flex-wrap', 'wrap')
		// Flex element auto sizing
		rBuildHelper('grow-','flex-grow', 'growshrink')
		rBuildHelper('shrink-','flex-shrink', 'growshrink')
		// Flex element children order
		rBuildHelper('at-','order', 'order')
		rBuildHelper('dir-','flex-direction', 'direction')

		// Text alignment helpers
		for $alignment in (left center right justify)
			.h-text-{$alignment}{$scaleSymbol}{$scaleName}
				text-align: $alignment

	rBreakpointContainer($scaleName)
		$scaleName = unquote($scaleName)

		$containerWidth = rolleiflex.breakpoints[$scaleName].container
		if($containerWidth)
			.{$pref}container
				width: rUnit($containerWidth)

	rBreakpointGrid($scaleName)

		// For rows
		.{$pref}row
			&.-{$pref}no-gutter{$scaleSymbol}{$scaleName}
				margin-left: 0
				margin-right: 0

				> .{$pref}col
					padding-left: 0
					padding-right: 0

			&.-{$pref}with-gutter{$scaleSymbol}{$scaleName}
				margin-left: -($gutter)
				margin-right: -($gutter)

				> .{$pref}col
					padding-left: $gutter
					padding-right: $gutter

		// For columns
		.-{$pref}size{$scaleSymbol}{$scaleName}
			flex-basis: auto

		for $col in (1..rolleiflex.columns)
			$percentageWidth = round(percentage($col/rolleiflex.columns),6)
			$offsetWidth = round(percentage(($col - 1)/rolleiflex.columns),6)

			&.-{$pref}size-{$col}{$scaleSymbol}{$scaleName}
				flex-basis: $percentageWidth
				max-width: $percentageWidth

			&.-{$pref}offset-{$col - 1}{$scaleSymbol}{$scaleName}
				margin-left: $offsetWidth

	rLoopBreakpoints($callbackMixin)
		for $scaleName, $scaleOptions in rolleiflex.breakpoints
			if(!$scaleOptions.minWidth || $scaleOptions.minWidth == 0)
				$callbackMixin($scaleName)
			else
				@media (min-width: rUnit($scaleOptions.minWidth))
					$callbackMixin($scaleName)

	// Build process starts here
	if(rolleiflex.build.helpers || rolleiflex.build.grid)
		.h-display-flex
			display: flex

	if(rolleiflex.build.container)
		.{$pref}container
		.{$pref}container-fluid
			max-width: 100%
			margin-right: auto
			margin-left: auto
			padding-right: rUnit(rolleiflex.spaces.containerPadding)
			padding-left: rUnit(rolleiflex.spaces.containerPadding)
			if(rolleiflex.autoBorderBox)
				box-sizing: border-box

		rLoopBreakpoints(rBreakpointContainer)

	if(rolleiflex.build.grid)
		.{$pref}row
			@extend .h-display-flex

		.{$pref}row
		.{$pref}col
			if(rolleiflex.autoBorderBox)
				box-sizing: border-box

		.{$pref}col
			max-width: 100%
			flex: 1 1 100%
			padding-right: $gutter
			padding-left: $gutter

		.{$pref}row
			flex-flow: row wrap
			margin-right: -($gutter)
			margin-left: -($gutter)

		// Builds responsive grid
		rLoopBreakpoints(rBreakpointGrid)

		// Generic as f*ck
		.{$pref}row.-{$pref}fill > .{$pref}col
		.{$pref}col.-{$pref}fill
			@extend .h-display-flex
			> *
				flex-grow: 1

	// Builds responsive helpers
	if(rolleiflex.build.helpers)
		rLoopBreakpoints(rBreakpointHelpers)

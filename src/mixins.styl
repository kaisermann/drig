dp = rolleiflex.declarativePrefix

gUnit(p)
	if(rolleiflex.use.rem)
		return unit(p / rolleiflex.baseFontSize, "rem")
	return unit(p,"px")
	
--chooseSelector(s1,s2)
	if(rolleiflex.build.declarative)
		{s1}
			{block}
	else
		{s2}
			{block}	
	
--makeBreakpointGrid(scaleName)

	+--chooseSelector("["+dp+"row]["+dp+"align-"+scaleName+"='start']",".row--"+scaleName+"-start")
		justify-content flex-start
		
	+--chooseSelector("["+dp+"row]["+dp+"align-"+scaleName+"='center']",".row--"+scaleName+"-center")
		justify-content center
		
	+--chooseSelector("["+dp+"row]["+dp+"align-"+scaleName+"='end']",".row--"+scaleName+"-end")
		justify-content flex-end

	+--chooseSelector("["+dp+"position-"+scaleName+"='top']",".row--"+scaleName+"-top")
		align-items flex-start
		
	+--chooseSelector("["+dp+"position-"+scaleName+"='bottom']",".row--"+scaleName+"-bottom")
		align-items flex-end
		
	+--chooseSelector("["+dp+"position-"+scaleName+"='middle']",".row--"+scaleName+"-middle")
		align-items center
		
	+--chooseSelector("["+dp+"space-"+scaleName+"='around']",".row--"+scaleName+"-around")
		justify-content space-around
		
	+--chooseSelector("["+dp+"space-"+scaleName+"='between']",".row--"+scaleName+"-between")
		justify-content space-between

	if(!rolleiflex.build.declarative)
		/* Auto Columns */
		.col--{scaleName}
			max-width 100%
		
	/* Columns */
	for col in (1..rolleiflex.columns)
		if(rolleiflex.build.declarative)
			sel = "["+dp+"size-"+scaleName+"='"+col+"']"
			
			if(rolleiflex.breakpoints[scaleName].breakpoint == 0)
				sel = "["+dp+"size='"+col+"']," + sel
		else
			sel = ".col--"+scaleName+"-"+col
			
			if(rolleiflex.breakpoints[scaleName].breakpoint == 0)
				sel = ".col--"+col+", " + sel
			
		{sel}
			percentageWidth = round(percentage(col/rolleiflex.columns),6)
			finalWidth = percentageWidth
				
			flex-basis: finalWidth
			max-width: finalWidth
	
	if(rolleiflex.build.declarative)
		sel = "["+dp+"size-"+scaleName+"='auto']"
		
		if(rolleiflex.breakpoints[scaleName].breakpoint == 0)
			sel = "["+dp+"size='auto']," + sel
	else
		sel = ".col--"+scaleName+"-auto"
		
		if(rolleiflex.breakpoints[scaleName].breakpoint == 0)
			sel = ".col--auto, " + sel
			
	{sel}
		flex 1 0 0
		max-width 100%
			
	/* Columns Offset helpers */
	for col in (1..(rolleiflex.columns - 1))
		percentageWidth = round(percentage(col/rolleiflex.columns),6)
		finalWidth = percentageWidth
			
		+--chooseSelector("["+dp+"offset-"+scaleName+"='"+col+"']",".col--"+scaleName+"-offset-"+col)
			margin-left: finalWidth
			
		+--chooseSelector("["+dp+"row='vertical'] ["+dp+"offset-"+scaleName+"='"+col+"']",".row--dir-reverse-col .col--"+scaleName+"-offset-"+col", .row--dir-col .col--"+scaleName+"-offset-"+col)
			margin-left initial
			margin-top: finalWidth
		
	+--chooseSelector("["+dp+"order-"+scaleName+"='first']",".col--"+scaleName+"-first")
		order -1
		
	+--chooseSelector("["+dp+"order-"+scaleName+"='last']",".col--"+scaleName+"-last")
		order 1
		
	+--chooseSelector("["+dp+"col]["+dp+"align-"+scaleName+"='start']",".col--"+scaleName+"-start")
		align-self flex-start
		
	+--chooseSelector("["+dp+"col]["+dp+"align-"+scaleName+"='middle']",".col--"+scaleName+"-middle")
		align-self center

	+--chooseSelector("["+dp+"col]["+dp+"align-"+scaleName+"='end']",".col--"+scaleName+"-end")
		align-self flex-end

			
	/* Text alignment helpers */
	for alignment in (left center right)
		.txt--{scaleName}-{alignment}
			text-align: alignment
			
makeGrid()
	if(rolleiflex.build.container)
		.container
			width 100%
			margin-right auto
			margin-left auto

		.container--padded
			padding-right: gUnit(rolleiflex.spaces.padding)
			padding-left: gUnit(rolleiflex.spaces.padding)

	+--chooseSelector("["+dp+"row]",".row")
		if(rolleiflex.autoBorderBox)
			box-sizing border-box
		display flex
		flex 0 1 auto
		flex-flow row wrap
		margin-right: -(gUnit(rolleiflex.spaces.gutter / 2))
		margin-left: -(gUnit(rolleiflex.spaces.gutter / 2))

	+--chooseSelector("["+dp+"row='vertical']",".row--dir-col")
		flex-direction column
		
	+--chooseSelector("["+dp+"row-reverse]",".row--dir-reverse-row")
		flex-direction row-reverse
		
	+--chooseSelector("["+dp+"row-reverse]["+dp+"row='vertical']",".row--dir-reverse-col")
		flex-direction column-reverse
					
	+--chooseSelector("["+dp+"col]","[class^=col--]")
		if(rolleiflex.autoBorderBox)
			box-sizing border-box
	
		padding-right: gUnit(rolleiflex.spaces.gutter / 2)
		padding-left: gUnit(rolleiflex.spaces.gutter / 2)
		width 100%
		flex-basis 100%
		max-width 100%		
		
	+--chooseSelector("["+dp+"row][no-gutter]",".row--no-gutter")
		margin-left 0
		margin-right 0
		
	+--chooseSelector("["+dp+"col][no-gutter]",".col--no-gutter")
		padding-left 0
		padding-right 0

	for scaleName, scaleOptions in rolleiflex.breakpoints
		if(scaleOptions.breakpoint == 0)
			--makeBreakpointGrid(scaleName)
		else
			@media (min-width: gUnit(scaleOptions.breakpoint))
			
				if(rolleiflex.build.container)
					.container
						max-width: gUnit(scaleOptions.container)
					
				--makeBreakpointGrid(scaleName)
		
	
	/*
		+--chooseSelector("["+dp+"row-no-gutter]",".row--no-gutter")
		margin-left 0
		margin-right 0
			
		sel = ""
		if(rolleiflex.build.declarative)
			sel = "> ["+dp+"col]"
		else
			sel = "> [class^='col--']"
		{sel}
			padding-left 0
			padding-right 0	
	*/
			
	+--chooseSelector("["+dp+"row-equal-height]",".row--equal-height")
		sel = ""
		if(rolleiflex.build.declarative)
			sel = "> ["+dp+"col]"
		else
			sel = "> [class^='col--']"
		{sel}
			display flex
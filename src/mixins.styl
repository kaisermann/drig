gUnit(p)
	if(rolleiflex.use.rem)
		return unit(p / rolleiflex.baseFontSize, "rem")
	return unit(p,"px")
	
--getColBase()
	if(rolleiflex.autoBorderBox)
			box-sizing border-box
			
	spaceType = padding
	colWidth = 100%
	
	if(rolleiflex.gutterType == "margin")
		spaceType = margin
		colWidth = "calc(%s - %s)" % (100% rolleiflex.spaces.gutter)
	
	{spaceType}-right: gUnit(rolleiflex.spaces.gutter / 2)
	{spaceType}-left: gUnit(rolleiflex.spaces.gutter / 2)
	width colWidth
		
	flex 0 0 auto
	
--makeBreakpointGrid(scaleName)
	.row--{scaleName}-start
		justify-content flex-start
		
	.row--{scaleName}-end
		justify-content flex-end
		
	.row--{scaleName}-center
		justify-content center

	.row--{scaleName}-top
		align-items flex-start
		
	.row--{scaleName}-bottom
		align-items flex-end
		
	.row--{scaleName}-middle
		align-items center
		
	.row--{scaleName}-around
		justify-content space-around
		
	.row--{scaleName}-between
		justify-content space-between

	if(!rolleiflex.use.attributeSelector)
		_colSelector = ".col--" + scaleName + ","
		for i in 1..rolleiflex.columns
			_colSelector += "," + ".col--" + scaleName + "-" + i
			
		{_colSelector}
			--getColBase()		

	/* Auto Columns */
	.col--{scaleName}
		flex-grow 1
		flex-basis 0
		max-width 100%
		
	/* Columns */
	for col in (1..rolleiflex.columns)
		.col--{scaleName}-{col}
			percentageWidth = round(percentage(col/rolleiflex.columns),10)
			finalWidth = percentageWidth
			
			if(rolleiflex.gutterType == "margin")
				finalWidth = "calc(%s - %s)" % (percentageWidth (rolleiflex.spaces.gutter))
				
			flex-basis: finalWidth
			max-width: finalWidth
				
			
	/* Columns Offset helpers */
	for col in (1..(rolleiflex.columns - 1))
		percentageWidth = round(percentage(col/rolleiflex.columns),10)
		finalWidth = percentageWidth
		
		if(rolleiflex.gutterType == "margin")
			finalWidth = "calc(%s + %s)" % (percentageWidth (rolleiflex.spaces.gutter/2))
			
		.col--{scaleName}-offset-{col}
			margin-left: finalWidth
		
	.col--{scaleName}-first
		order -1
		
	.col--{scaleName}-last
		order 1
		
	.col--{scaleName}-top
		align-self flex-start
		
	.col--{scaleName}-middle
		align-self center
		
	.col--{scaleName}-bottom
		align-self flex-end
			
	/* Text alignment helpers */
	for alignment in (left center right)
		.txt--{scaleName}-{alignment}
			text-align: alignment
			
makeGrid()
	if(rolleiflex.build.container)
		.container
			width 100%
			margin-right auto
			margin-left auto

		.container--padded
			padding-right: gUnit(rolleiflex.spaces.padding)
			padding-left: gUnit(rolleiflex.spaces.padding)

	.row
		if(rolleiflex.autoBorderBox)
			box-sizing border-box
		display flex
		flex 0 1 auto
		flex-direction row
		flex-wrap wrap
		margin-right: -(gUnit(rolleiflex.spaces.gutter / 2))
		margin-left: -(gUnit(rolleiflex.spaces.gutter / 2))

	.row--dir-col
		flex-direction column
		
	.row--dir-reverse-row
		flex-direction row-reverse
		
	.row--dir-reverse-col
		flex-direction column-reverse
	
	_colSelector = ""
	
	if(rolleiflex.use.attributeSelector)
		[class^=col--]
			--getColBase()

	for scaleName, scaleOptions in rolleiflex.breakpoints
		if(scaleOptions.breakpoint == 0)
			--makeBreakpointGrid(scaleName)
		else
			@media (min-width gUnit(scaleOptions.breakpoint))
			
				if(rolleiflex.build.container)
					.container
						max-width: gUnit(scaleOptions.container)
					
				--makeBreakpointGrid(scaleName)
				
